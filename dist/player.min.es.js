import"loading-mask.less";class e{constructor(e){this.playerOptions={url:"",autoplay:!1,width:"100%",height:"100%"},this.playerOptions=Object.assign(this.playerOptions,e),this.init(),this.initComponent(),this.initContainer()}init(){let e=this.playerOptions.container;this.isTagValidate(e)||l("你传入的容器的元素类型不适合，建议传入块元素或者行内块元素，拒绝传入具有交互类型的元素例如input框等表单类型的元素"),this.container=e}initComponent(){let e=new i;this.toolbar=e}initContainer(){this.container.style.width=this.playerOptions.width,this.container.style.height=this.playerOptions.height,this.container.className=d["video-container"],this.container.innerHTML=`\n      <div class="${d["video-wrapper"]}">\n        <video>\n          <source src="${this.playerOptions.url}" type="video/mp4">\n            你的浏览器暂不支持HTML5标签,非常抱歉\n          </source>\n        </video>\n      </div>\n    `,this.container.appendChild(this.toolbar.template)}isTagValidate(e){return"block"===window.getComputedStyle(e).display||"inline"!==window.getComputedStyle(e).display&&("inline-block"!==window.getComputedStyle(e).display||!(e instanceof HTMLImageElement||e instanceof HTMLAudioElement||e instanceof HTMLVideoElement||e instanceof HTMLInputElement||e instanceof HTMLCanvasElement||e instanceof HTMLButtonElement))}}class i{constructor(){this.init()}get template(){return this.template_}init(){let e=document.createElement("div");e.className=`${d["video-controls"]} ${d["video-controls-hidden"]}`,e.innerHTML+=(new t).template,e.innerHTML+=(new n).template,this.template_=e}}class t{constructor(){this.init()}get template(){return this.template_}init(){this.template_=`\n        <div class="${d["video-progress"]}">\n            <div class="${d["video-pretime"]}">00:00</div>\n            <div class="${d["video-buffered"]}"></div>\n            <div class="${d["video-completed"]} "></div>\n            <div class="${d["video-dot"]} ${d["video-dot-hidden"]}"></div>\n        </div>\n        `}}class n{constructor(){this.init()}get template(){return this.template_}init(){this.template_=`\n        <div class="${d["video-play"]}">\n            <div class="${d["video-subplay"]}">\n                <div class="${d["video-start-pause"]}">\n                    <i class="${a.iconfont} ${a["icon-bofang"]}"></i>\n                </div>\n                <div class="${d["video-duration"]}">\n                    <span class="${d["video-duration-completed"]}">00:00</span>&nbsp;/&nbsp;<span class="${d["video-duration-all"]}">00:00</span>\n                </div>\n            </div>\n            <div class="${d["video-settings"]}">\n                <div class="${d["video-subsettings"]}">\n                    <i class="${a.iconfont} ${a["icon-shezhi"]}"></i>\n                </div>\n                <div class="${d["video-volume"]}">\n                    <i class="${a.iconfont} ${a["icon-yinliang"]}"></i>\n                    <div class="${d["video-volume-progress"]}">\n                    <div class="${d["video-volume-completed"]}"></div>\n                    <div class="${d["video-volume-dot"]}"></div>\n                    </div>\n                </div>\n                <div class="${d["video-fullscreen"]}">\n                    <i class="${a.iconfont} ${a["icon-quanping"]}"></i>\n                </div>\n            </div>\n        </div>\n    `}}class o{constructor(){this.init()}get template(){return this.template_}init(){let e=document.createElement("div");e.className=d["loading-mask"];let i=document.createElement("div");i.className=d["loading-container"];let t=document.createElement("div");t.className=d["loading-item"];let n=document.createElement("div");n.className=d["loading-title"],n.innerText="视频正在努力加载中...",i.appendChild(t),i.appendChild(n),e.appendChild(i),this.template_=e}}class s{constructor(){this.init()}get template(){return this.template_}init(){this.template_=this.generateErrorMask()}generateErrorMask(){let e=document.createElement("div");e.className=d["error-mask"];let i=document.createElement("div");i.className=d["error-container"];let t=document.createElement("div");t.className=d["error-item"];let n=document.createElement("i");n.className=`${a.iconfont} ${a["icon-cuowutishi"]}`,t.appendChild(n);let o=document.createElement("div");return o.className=d["error-title"],o.innerText="视频加载发生错误",i.appendChild(t),i.appendChild(o),e.appendChild(i),e}}function l(e){throw new Error(e)}const d={"video-container":"player_video-container__ndwL-","video-wrapper":"player_video-wrapper__zkaDS","video-controls":"toolbar_video-controls__z6g6I","video-controls-hidden":"","video-progress":"pregress_video-progress__QjWkP","video-pretime":"pregress_video-pretime__JInJt","video-buffered":"pregress_video-buffered__N25SV","video-completed":"pregress_video-completed__CnWX-","video-dot":"pregress_video-dot__giuCI","video-dot-hidden":"pregress_video-dot-hidden__SceSE","video-play":"controller_video-play__fP3BY","video-subplay":"controller_video-subplay__WTnV2","video-start-pause":"controller_video-start-pause__MAW2N","video-duration":"controller_video-duration__4mxGN","video-duration-completed":"controller_video-duration-completed__aKEo3","video-settings":"controller_video-settings__vL60f","video-subsettings":"controller_video-subsettings__lRckv","video-volume":"controller_video-volume__6xzJB","video-volume-progress":"controller_video-volume-progress__f4U3J","video-volume-completed":"controller_video-volume-completed__R0FaX","video-volume-dot":"pregress_video-dot__giuCI","video-fullscreen":"controller_video-fullscreen__1-aJA","video-duration-all":"controller_video-duration-all__MOXNR","loading-mask":"","loading-container":"","loading-item":"","loading-title":"","error-mask":"","error-container":"","error-item":"","error-title":""},a={iconfont:"","icon-bofang":"","icon-shezhi":"","icon-yinliang":"","icon-quanping":"","icon-cuowutishi":"","icon-stop":""};class r{constructor(){this.$events={}}emit(e,...i){this.$events[e]&&this.$events[e].forEach((e=>{e.call(this,...i)}))}on(e,i){this.$events[e]=this.$events[e]||[],this.$events[e].push(i)}}export{l as $warn,r as BaseEvent,n as Controller,s as ErrorMask,o as LoadingMask,e as Player,t as Progress,i as ToolBar,a as icon,d as styles};
